(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{348:function(s,n,a){"use strict";a.r(n);var e=a(0),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",[s._v("const,var,let")])]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("const定义的变量不可以修改，而且必须初始化\nconst一般用来声明常量，且声明的常量是不允许改变的，只读属性，因此就要在声明的同时赋值。const与let一样，都是块级作用域，存在暂时性死区，不存在变量声明提前，不允许重复定义\nconst A=1；（重新给常量A赋值会报错 ）\nA=3;// Uncaught TypeError: Assignment to constant variable.(错误：赋值给常量)")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const b = 1;    //正确\nconst b;    //错误，必须初始化\nconsole.log('函数外const定义b：' +　ｂ);/有输出值\n//b = 5;\n//console.log('函数外修改const定义b:' + b);//无法输出\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("blockquote",[a("p",[a("strong",[s._v("var定义的变量可以修改，如果不初始化会输出undefined，不会报错。"),a("br"),s._v("\nvar的作用域是函数作用域，在一个函数内利用var声明一个变量，则这个变量只在这个函数内有效")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var a = 1;\n// var a;//不会报错\nconsole.log('函数外var定义a:' + a);//可以输出a=1\nfunction change(){  \n    a = 4;\n    console.log('函数内var定义a:' + a);//可以输出a=4\n}\nchange();\nconsole.log('函数调用后var定义a为函数内部修改值：' + a);//可以输出a=4\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("blockquote",[a("p",[a("strong",[s._v("let是块级作用域，函数内部使用let定义后，对函数外部无影响。\nlet是es6新增的声明变量的方式 ，其特点是：作用域是块级作用域（在ES6之前，js只存在函数作用域以及全局作用域）")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("let c = 3;\nconsole.log('函数外let定义c：' + c);//输出c=3\nfuncion change(){   \n    let c = 6;\n    console.log('函数内let定义c：' + c);//输出c=6\n}\nchange();\nconsole.log('函数调用后let定义c不受函数内部定义影响：' + c);//输出c=3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);