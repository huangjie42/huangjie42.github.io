(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{352:function(a,s,e){"use strict";e.r(s);var t=e(0),n=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"js-对象基本用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-对象基本用法"}},[a._v("#")]),a._v(" JS 对象基本用法")]),a._v(" "),e("p",[a._v("首先，我们来了解一下JS的数据类型有哪些？")]),a._v(" "),e("blockquote",[e("p",[a._v("数字（Number）"),e("br"),a._v("\n字符串（String）"),e("br"),a._v("\n布尔（Boolean）"),e("br"),a._v("\n符号（Symbol）"),e("br"),a._v("\n空（Undefined）"),e("br"),a._v("\n空（Null）"),e("br"),a._v("\n对象（Object）")])]),a._v(" "),e("p",[a._v("关于JS的数据类型，可以简写为：“四基两空一对象”。其中，前六种数据类型为简单数据类型，Object为唯一的复杂类型。接下来，我们就针对对象展开讨论.")]),a._v(" "),e("h2",{attrs:{id:"js对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js对象"}},[a._v("#")]),a._v(" JS对象")]),a._v(" "),e("h3",{attrs:{id:"定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[a._v("#")]),a._v(" 定义")]),a._v(" "),e("p",[a._v("JS对象是无序的数据集合，也是键值对的集合。（键值对中的键是指对象的属性名，值指的是对象的属性值）")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("对象的声明\nlet obj = { 'name' : 'frank' , 'age' : 18}  \n这是一种简写  \nlet obj = new Object ({ 'name' : 'frank' , 'age' : 18})\n>这是正规写法 \n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("h2",{attrs:{id:"细节"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#细节"}},[a._v("#")]),a._v(" 细节")]),a._v(" "),e("blockquote",[e("p",[a._v("1.键名是字符串，不是标识符，可以包含任意字符；"),e("br"),a._v("\n2.引号可以省略，但是省略之后就只能写标识符（按照标识符的要求来，第一个字符不能以数字开头）或者只使用数字；"),e("br"),a._v("\n3.就算引号省略了，键名也还是字符串（这是一个重点，必须要理解并记住）。")])]),a._v(" "),e("h2",{attrs:{id:"用变量作属性名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用变量作属性名"}},[a._v("#")]),a._v(" 用变量作属性名")]),a._v(" "),e("p",[a._v("有些时候，我们需要用变量来做属性名：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("let p1 = 'name'\n\nlet obj = { p1 : 'frank' }\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[a._v("此时，对象的属性名为p1，并不是变量。")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\nlet p1 = 'name'\n\nlet obj = { [p1] : 'frank' }\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("此时，对象的属性名为'name'。这时，我们就以一个变量作了对象的属性名。")]),a._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),e("blockquote",[e("p",[a._v("不加中括号（[ ]）的属性名，会被自动变为字符串；"),e("br"),a._v("\n加了中括号，则会被当作变量进行求值，然后以求得的值作为对象的属性名，求得的值如果不是字符串，也会自动转变为字符串。")])]),a._v(" "),e("h2",{attrs:{id:"对象的隐藏属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象的隐藏属性"}},[a._v("#")]),a._v(" 对象的隐藏属性")]),a._v(" "),e("blockquote",[e("p",[a._v("隐藏属性储存着原型的地址"),e("br"),a._v("\nJS中，每一个对象都有一个隐藏属性，这个隐藏属性储存着其共有属性组成的对象的地址，这个共有属性组成的对象叫做原型。")])]),a._v(" "),e("h3",{attrs:{id:"原型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原型"}},[a._v("#")]),a._v(" 原型")]),a._v(" "),e("blockquote",[e("p",[a._v("每一个对象都有原型 ，原型中存着对象的共有属性；"),e("br"),a._v("\n对象的原型也是对象 ，对象的原型也有原型。")])]),a._v(" "),e("h2",{attrs:{id:"对象属性的增删改查"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象属性的增删改查"}},[a._v("#")]),a._v(" 对象属性的增删改查")]),a._v(" "),e("h3",{attrs:{id:"删除对象属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除对象属性"}},[a._v("#")]),a._v(" 删除对象属性")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("delete obj.xxx 或者 delete obj['xxx']\n通过上述两种方式，可以删除对象的xxx属性。\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h3",{attrs:{id:"区分两种方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#区分两种方式"}},[a._v("#")]),a._v(" 区分两种方式")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\ndelete obj.xxx 或者 delete obj['xxx']\n通过这种方式，可以将对象的属性彻底删除，包括属性名以及属性值。\nobj.xxx = undefined\n通过这种方式，只是将对象的xxx属性的当前的属性值改为了undefined，而并非将该属性完全删除。\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("h3",{attrs:{id:"如何确认一个属性是否属于某个对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何确认一个属性是否属于某个对象"}},[a._v("#")]),a._v(" 如何确认一个属性是否属于某个对象")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\n'xxx' in obj\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("blockquote",[e("p",[a._v("通过上述API可以判断属性'xxx'是否属于对象obj。若得到>的值为true，则表示属性'xxx'属于对象obj；若得到的值>为false，则表示该属性不属于对象obj 。"),e("br"),a._v("\n** 注意 **：通过obj.xxx === undefined并不能判定属 >性'xxx'是否属于对象obj。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);