(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{367:function(t,n,e){"use strict";e.r(n);var a=e(0),s=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",[t._v("顺序结构--选择结构(分支)--循环结构")])]),t._v(" "),e("h2",{attrs:{id:"三大结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三大结构"}},[t._v("#")]),t._v(" 三大结构")]),t._v(" "),e("pre",[e("code",[t._v("顺序结构\n选择结构(分支)\n循环结构\n")])]),t._v(" "),e("h2",{attrs:{id:"_1-选择结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-选择结构"}},[t._v("#")]),t._v(" 1 选择结构")]),t._v(" "),e("pre",[e("code",[t._v("a.if语句--语法结构\n\tif(条件){\n\t\tcode..\n\t}\n\t如果满足if后面的条件 就执行 括号里面的代码\nb.if...else--语法结构\n\t    if(条件){\n\t    \t\tcode1...\n\t    }else{\n\t    \t\tcode2...\n\t    }\n\t    如果if里面的条件成立 执行code1 如果不成立 执行code2\n\t    \nc. if...else if...else if...else --语法结构\n\t\tif(条件1){\n\t\t\tcode1\n\t\t}else if(条件2){\n\t\t\tcode2\n\t\t}...\n\t\telse if(条件n){\n\t\t\tcode-n\n\t\t}else{\n\t\t\t如果上面都不满足执行这里\n\t\t}\n\t\t先执行条件1 如果满足执行code1 再执行条件2 如果满足就执行code2 不满足就一只判断下去\n\t\t直到最后一个else\n\n  switch语句--语法结构：\n       switch(状态值){\n      \n\t\t    case 状态值1:\n\t\t        code..1\n\t\t        break;\n\t\t    case 状态值2:\n\t\t        code..2\n\t\t        break;\n\t\t    case 状态值N:\n\t\t        code..3\n\t\t        break;\n\t\t    default:\n\t\t        code..4\n\t\t       break;\n\t\t       //(放在最后面可以省略,放在前面不可以省略)\n\t\t}\n\tswitch执行原理：用switch括号里面的 结果和 case后面的做比对 如果一样，就执行对应case后面的代码\n")])]),t._v(" "),e("p",[t._v("总结：能够看懂和听懂老师讲的代码？但是自己写的时候就没思路？\n1） 拿到了需求\na. 判断用qq的长度\nb. 判断qq是不是数字\nc. 判断密码的长度\nd. 判断是否可以登录\n2） 把需求拆分\n判断QQ的长度\n1.得到QQ号    ----\x3e input--\x3e input.value --\x3e qq\n2.得到QQ号长度  --\x3e .length 属性\n3.拿长度去比对  ---\x3e ===  if")]),t._v(" "),e("pre",[e("code",[t._v("\t判断qq是不是数字  ---\x3e NaN --\x3e isNaN(搜索)\n    判断是否可以登录\n    \t\t拿到正确的qq 和 密码 和 用户输入的对比\n\t\t\n编程：如果没办法用js去实现某个功能\n      用中文或者英文把 思路（步骤）写下来\n")])]),t._v(" "),e("h2",{attrs:{id:"_2-循环结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-循环结构"}},[t._v("#")]),t._v(" 2 循环结构")]),t._v(" "),e("pre",[e("code",[t._v("单曲循环---\x3e 让某段代码重复执行\n1).for循环语句格式\n\tfor(初始化表达式;条件表达式；条件改变表达式){\n\t\t循环体:需要被循环的代码\n\t}\n\t\n2).while循环语句格式\n\nwhile(条件){\n\t循环体；\n}\n当条件满足的时候，就去循环括号里面的内容\n\n3).do...while循环语句\n语法结构：\ndo{\n    循环体\n}while(条件表达式);\n\n总结： while循环和do-while循环的区别：\n      while循环是先判断再执行循环体， 循环体执行的次数 >=0\n      do-while循环 先去执行循环体，再去判断条件， 循环体执行次数 >=1\n      \n3).break,continue\n\tbreak 跳出当前循环\n\tcontinue 跳出本次循环 继续下次循环\n\t\n4）循环嵌套\n\t   循环中有循环\n\t   for(var i=0;i<=9;i++){\n\t   \t\t//循环体---\x3e可以是任意代码\n\t   \t\tfor(var j=0;j<=9;j++){\n\t   \t\t\t循环体---\x3e可以再写循环\n\t   \t\t}\n\t   }\n\t   注意：不要超过3层循环\n\t   \n\t   思维导图工具：\n\t   \t\thttp://naotu.baidu.com/  web\n\t   \t\thttps://www.xmind.cn/download/ 桌面\n")])])])}),[],!1,null,null,null);n.default=s.exports}}]);